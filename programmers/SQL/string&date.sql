-- 자동차 대여 기록에서 장기/단기 대여 구분하기
SELECT HISTORY_ID, CAR_ID, DATE_FORMAT(START_DATE, '%Y-%m-%d') AS START_DATE, DATE_FORMAT(END_DATE, '%Y-%m-%d') AS END_DATE, (
    CASE WHEN DATEDIFF(END_DATE, START_DATE) >= 29
        THEN '장기 대여'
        ELSE '단기 대여'
    END) AS RENT_TYPE
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
    WHERE START_DATE LIKE '2022-09%'
    ORDER BY HISTORY_ID DESC
/* 30일 이상 장기대여 : >=29
1/1~1/2이면 DATEDIFF=1이지만 2일을 빌린 것 */

-- 자동차 평균 대여 기간 구하기
SELECT CAR_ID, ROUND(AVG(DATEDIFF(END_DATE, START_DATE)), 2) AS AVERAGE_DURATION
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
    WHERE DATEDIFF(END_DATE, START_DATE) >= 6
    ORDER BY 2 DESC, 1 DESC

-- 자동차 평균 대여 기간 구하기
SELECT CAR_ID, ROUND(AVG(DATEDIFF(END_DATE, START_DATE)+1), 1) AS AVERAGE_DURATION
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY
    GROUP BY CAR_ID
    HAVING AVERAGE_DURATION >= 7
    ORDER BY 2 DESC, 1 DESC

-- 조건에 부합하는 중고거래 상태 조회하기
SELECT BOARD_ID, WRITER_ID, TITLE, PRICE,
        CASE WHEN STATUS='SALE' THEN '판매중'
             WHEN STATUS='RESERVED' THEN '예약중'
             ELSE '거래완료'
        END AS STATUS
    FROM USED_GOODS_BOARD
    WHERE CREATED_DATE='2022-10-05'
    ORDER BY 1 DESC

-- 중성화 여부 파악하기
SELECT ANIMAL_ID, NAME, 
        CASE WHEN SEX_UPON_INTAKE LIKE '%Neutered%' OR SEX_UPON_INTAKE LIKE '%Spayed%' THEN 'O'
            ELSE 'X'
        END AS 중성화
    FROM ANIMAL_INS
    ORDER BY 1

-- 카테고리 별 상품 개수 구하기
SELECT LEFT(PRODUCT_CODE, 2) AS CATEGORY, COUNT(*) AS PRODUCTS
    FROM PRODUCT
    GROUP BY 1
    ORDER BY 1

-- DATETIME에서 DATE로 형 변환
SELECT ANIMAL_ID, NAME, DATE_FORMAT(DATETIME, '%Y-%m-%d') AS 날짜
    FROM ANIMAL_INS
    ORDER BY 1

-- 조건별로 분류하여 주문상태 출력하기
SELECT ORDER_ID, PRODUCT_ID, DATE_FORMAT(OUT_DATE, '%Y-%m-%d') AS OUT_DATE,
        CASE WHEN OUT_DATE <= '2022-05-01' THEN '출고완료'
            WHEN OUT_DATE > '2022-05-01' THEN '출고대기'
            ELSE '출고미정'
        END AS '출고여부'
    FROM FOOD_ORDER
    ORDER BY 1

-- 연도 별 평균 미세먼지 농도 조회하기
SELECT YEAR(YM) AS YEAR, ROUND(AVG(PM_VAL1), 2) AS PM10, ROUND(AVG(PM_VAL2), 2) AS 'PM2.5'
    FROM AIR_POLLUTION
    GROUP BY YEAR, LOCATION1, LOCATION2
    HAVING LOCATION2='수원'
    ORDER BY 1

-- 분기별 분화된 대장균의 개체 수 구하기
SELECT 
        CASE
            WHEN MONTH(DIFFERENTIATION_DATE) BETWEEN 1 AND 3 THEN '1Q'
            WHEN MONTH(DIFFERENTIATION_DATE) BETWEEN 4 AND 6 THEN '2Q'
            WHEN MONTH(DIFFERENTIATION_DATE) BETWEEN 7 AND 9 THEN '3Q'
            ELSE '4Q'        
        END AS QUARTER, COUNT(ID) AS ECOLI_COUNT
    FROM ECOLI_DATA
    GROUP BY 1
    ORDER BY 1

-- 조회수가 가장 많은 중고거래 게시판의 첨부파일 조회하기
SELECT CONCAT('/home/grep/src/', BOARD_ID, '/', FILE_ID, FILE_NAME, FILE_EXT) AS FILE_PATH
    FROM USED_GOODS_FILE
    WHERE BOARD_ID = (
        SELECT BOARD_ID 
        FROM USED_GOODS_BOARD
        ORDER BY VIEWS DESC
        LIMIT 1
    )
    ORDER BY FILE_ID DESC

SELECT CONCAT('/home/grep/src/', F.BOARD_ID, '/', F.FILE_ID, F.FILE_NAME, F.FILE_EXT) AS FILE_PATH
    FROM USED_GOODS_FILE F
    JOIN USED_GOODS_BOARD B
    ON B.BOARD_ID = F.BOARD_ID
    WHERE VIEWS = (SELECT MAX(VIEWS) FROM USED_GOODS_BOARD)
    ORDER BY FILE_ID DESC

-- 오랜 기간 보호한 동물 2
SELECT O.ANIMAL_ID, O.NAME 
    FROM ANIMAL_OUTS O
    JOIN ANIMAL_INS I
    ON O.ANIMAL_ID=I.ANIMAL_ID
    ORDER BY DATEDIFF(O.DATETIME, I.DATETIME) DESC
    LIMIT 2

-- 조건에 맞는 사용자 정보 조회하기
SELECT U.USER_ID, U.NICKNAME, 
        CONCAT(U.CITY, ' ', U.STREET_ADDRESS1, ' ', U.STREET_ADDRESS2) AS 전체주소, 
        CONCAT(LEFT(U.TLNO, 3),'-',SUBSTR(U.TLNO, 4, 4), '-', RIGHT(U.TLNO, 4)) AS 전화번호
    FROM USED_GOODS_BOARD B
    JOIN USED_GOODS_USER U
    ON B.WRITER_ID=U.USER_ID
    GROUP BY B.WRITER_ID
    HAVING COUNT(*) >= 3
    ORDER BY 1 DESC